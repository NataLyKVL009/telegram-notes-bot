from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
import os
TOKEN = os.getenv("BOT_TOKEN")

# –í—Å—Ç–∞–≤—å —Å—é–¥–∞ —Ç–æ–∫–µ–Ω –æ—Ç BotFather
#TOKEN = "8449212884:AAEp-8TFw_tYj8xXL1ecVLrqlyWdSODeIF4"

# –ü—Ä–æ—Å—Ç–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∑–∞–º–µ—Ç–æ–∫ (–≤ –ø–∞–º—è—Ç–∏)
notes = {}


# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –∑–∞–º–µ—Ç–æ–∫ üìù\n"
                                    "–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –º–Ω–µ –∑–∞–º–µ—Ç–∫—É.\n"
                                    "–ö–æ–º–∞–Ω–¥—ã:\n"
                                    "/notes ‚Äì –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∑–∞–º–µ—Ç–∫–∏\n"
                                    "/clear ‚Äì —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –∑–∞–º–µ—Ç–∫–∏")


# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏
async def add_note(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id
    text = update.message.text

    if user_id not in notes:
        notes[user_id] = []
    notes[user_id].append(text)

    await update.message.reply_text(f"‚úÖ –ó–∞–º–µ—Ç–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: {text}")


# –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∑–∞–º–µ—Ç–∫–∏
async def show_notes(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id
    user_notes = notes.get(user_id, [])

    if not user_notes:
        await update.message.reply_text("–£ —Ç–µ–±—è –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–º–µ—Ç–æ–∫.")
    else:
        result = "\n".join([f"{i + 1}. {n}" for i, n in enumerate(user_notes)])
        await update.message.reply_text(f"üìí –¢–≤–æ–∏ –∑–∞–º–µ—Ç–∫–∏:\n{result}")


# –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –∑–∞–º–µ—Ç–∫–∏
async def clear_notes(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id
    notes[user_id] = []
    await update.message.reply_text("üóë –í—Å–µ –∑–∞–º–µ—Ç–∫–∏ —É–¥–∞–ª–µ–Ω—ã.")


def main():
    app = Application.builder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("notes", show_notes))
    app.add_handler(CommandHandler("clear", clear_notes))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, add_note))

    app.run_polling()


if __name__ == "__main__":
    main()
